/*
  Simple Bank - dbdiagram.io
  https://dbdiagram.io/d/647ab0a0722eb77494507465
 */

// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

// also can declare enum as the type of accounts currency column
/* Enum Currency {
  USD
  EUR
} */

Table accounts as A {
  // big autoincrement integers (8-bytes/64-bits)
  id bigserial [pk]
  owner varchar [not null]
  balance bigint [not null]
  // handle currency value validation in the application code
  currency varchar [not null]
  // timestamp with timezone infomation
  created_at timestamptz [not null, default: `now()`]

  indexes {
    owner // search accounts by owner name
  }
}

// record all changes to the account balance
Table entries as E {
  id bigserial [pk]
  account_id bigint [not null, ref: > A.id]
  amount bigint [not null, note: 'can be negative or positive']
  created_at timestamptz [not null, default: `now()`]

  indexes {
    account_id // list all entries of a specific account
  }
}

// Record all the money tranfers between two accounts
Table transfers as T {
  id bigserial [pk]
  from_account_id bigint [not null, ref: > A.id]
  to_account_id bigint [not null, ref: > A.id]
  amount bigint [not null, note: 'must be positive']
  created_at timestamptz [not null, default: `now()`]

  indexes {
    from_account_id // search for all transfers that going out of an account
    to_account_id // search for all transfers that going in to an account
    (from_account_id, to_account_id) // search for all transfers between 2 specific accounts
  }
}

// * This is another way to declare the foreign key reference
// Ref: entries.account_id > account.id
